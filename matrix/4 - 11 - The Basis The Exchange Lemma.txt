

We need a tool, a technical tool, to 
transform one set of vectors, to another. 
So, let's say, you have a set S of 
vectors and you have another vector z, 
that you want to. 
Inject into the set S. 
But you want to maintain that S has the 
same cardinality, so you have to eject 
another vector from S. 
And you want to do this in such a way 
that you don't change the span. 
Well, the Exchange Lemma is a technical 
way of achieving that. 
It tells you which vector to eject. 
We'll start with a simplified version. 
So here's the Simplified Exchange Lemma. 
Suppose S is a set of vectors and z is a 
nonzero vector in the Span of the set S. 
Then there always exists another vector, 
w, in S, such that the span of the set 
obtained from S by adding z and removing 
w is the same as the Span of S. 
That is, W is a vector we can remove 
while maintaining the same span. 
Here's how the proof goes. 
We write S as the set consisting of v1 
through vn. 
Now, since z is in the span of this set 
S, we can write z as a linear combination 
of the vectors in S. 
By the superfluous vector lemma, the span 
of the set with z Is the same as the span 
of the set without z. 
Now, since z is nonzero at least one of 
the coefficients in this representation 
is also nonzero. 
Say it's alpha i, the coefficient of vi. 
Well, we can rewrite this by moving 
everything over except for alpha i times 
vi. 
And now we divide through by alpha i, 
which us is guaranteed to be nonzero. 
And we managed to represent vi as a 
linear combination of all the other 
vectors. 
Using the Supergluous-Vector Lemma, 
therefore the set Span by S with z is the 
same as the Span of the set S with z but 
not w. 
And that proves this Simplified Exchange 
Lemma. 
So we see that the Simplified Exchange 
Lemma is not enough. 
We need to enhance this Lemma. 
We introduce a set of protected elements 
A. 
Here's the full exchange lemma. 
Suppose s is a set of vectors, and a is 
the subset of s. 
Suppose z is a vector in the span of s 
such that the union of a with z is a 
linearly independent set. 
Then there is a vector w in S and not in 
the protected set A such that the Span of 
S is the same. 
As the Span of the set obtained from S by 
adding in z and taking away w. 
You see that unlike the Simplified Lemma, 
we require not just that z be nonzero, 
but in fact that the set, A union z is 
linearly independent. 
So here's the statement of the Lemma, 
let's go through the proof. 
We'll write the set S in this way. 
V1 through vk, followed by w1 through wl. 
Where the set of protected elements, A, 
consist of v1 through vk. 
Now, since z is required to be in the 
span of S, we can write z as the linear 
combination of the vectors in S. 
Here's a linear combination. 
Z is alpha 1 times v1, up to alpha k times 
vk plus beta1 times w1 up to beta l times 
wl. 
By the Superfluous--Vector Lemma, Span of 
the set obtained from S by adding in z is 
the same as Span of S. 
Z is a Superfluous-Vector. 
Now if these coefficients, beta 1 through 
beta l, were all zero, then we would have 
written z as a linear combination just of 
the vectors v one through vk. 
But that would contradict the fact that A together with z is a linearly 
independent set, so at least one of these 
coefficients, beta 1 through beta l, must 
be nonzero. 
So let's say beta 1 is a nonzero 
coefficient. 
Then we can rewrite this equation in this 
way, by moving everything from the 
right-hand side to the left-hand side. 
Except Beta 1, w1, and we get this 
equation. 
Now, we divide the whole thing by Beta 1. 
We can do that because we know beta 1 is 
nonzero. 
And we get, this equation, which 
expresses w1 as a linear combination of 
all the other vectors. 
Therefore, by the Superfluous-Vector 
lemma. 
The span of the set s together with z is 
the same as the span of the set s 
together with z with w1 omitted. 
And that completes the proof. 
Now I'll show how the Exchange Lemma can 
be used to prove that our minimum 
spanning forest algorithm is correct. 
This is not really part of linear 
algebra. 
I'm doing it just as an illustration of 
the power of the exchange lemma. 
Here's the algorithm remember 
for finding a Minimum Spanning Forest of 
a graph G. 
We start by initializing the forest to 
the empty set, and we consider the edges 
in increasing order of weight. 
For each edge e, if e's endpoints are not 
yet connected, we add e to F. 
We'll show that this algorithm, this 
greedy algorithm, actually finds the 
minimum weight spanning forest. 
And let's assume for simplicity, that all 
the weights are distinct. 
Here's how the proof goes, let F be the 
force found by the algorithm and let F* 
be the truly minimum-weight spanning 
force. 
We want to show that F is equal to F*. 
To do that we use proof by contradiction, 
we'll assume for a contradiction that 
they're just different. 
Now, let e1, e2 and so on up to em be the 
edges of G in increasing order of weight. 
Now, let ek be the minimum-weight edge on 
which F and F* differ. 
Now we have to set ourselves up to apply 
the exchange level. 
Let A be the set of edges that occur 
before ek, in this order, that are in 
both F and F*. 
Since at least one of the fours includes 
all of A and ek, it must be that A 
together with ek has no cycles. 
It's a linearly independent set. 
Now, consider the moment where the Grow 
algorithm is deciding whether to include 
ek in F or not. 
So far the algorithm has chosen the edges 
in A to be included in its forest. 
Now, we already said that ek does not 
form a cycle with the edges in A. 
So the algorithm must choose ek to put in 
the forest F. 
Now since F and F* differ on ek, it 
follows that F star does not contain the 
edge ek. 
Now we can use the Exchange Lemma. 
A is a subset of F*, A together with 
ek is a linearly independent set. 
Therefore by the exchange lemma, there's 
an edge, call it en in f*, but 
not in A, the protected set. 
Such that the span of F star together 
with ek but not including the en is the 
same as the span of F*. 
That shows that this set, where we 
replace en with ek, is also a spanning 
set. 
But when we did that replacement, the set 
got cheaper, ek occurs earlier in the 
order than en, so it has smaller weight. 
That shows that, in fact, f* must not 
have been the truly minimum-weight 
spanning forest after all. 
That's a contradiction which completes 
the proof. 


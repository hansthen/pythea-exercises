
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'Q\xe6\xe7\x91\x0e\x01@ed\xb75d\xc5d\xa5\x88'
    
_lr_action_items = {'_INT':([28,],[32,]),'_ASSIGN':([28,],[34,]),'_NO_TYPE':([82,],[105,]),'_OBJECT':([28,],[36,]),'_COND':([28,],[37,]),'_DIV':([28,],[62,]),'_BRANCH':([77,100,101,104,105,114,122,],[-58,-39,115,-14,-15,-38,-40,]),'_EQ':([28,],[39,]),'_CLASS':([6,],[8,]),'DIGITS':([32,40,],[69,74,]),'_BOOL':([28,],[40,]),'_LT':([28,],[41,]),'_MUL':([28,],[42,]),')':([12,13,14,16,18,19,27,67,104,105,116,119,120,124,],[-58,15,-6,-5,-7,-8,-10,-9,-14,-15,-58,123,-31,-30,]),'(':([11,103,],[12,116,]),'_ATTR':([17,],[20,]),'FILENAME':([10,53,],[11,83,]),'_TYPCASE':([28,],[43,]),'_NO_EXPR':([28,],[44,]),'_LE':([28,],[45,]),'_DISPATCH':([28,],[46,]),'_ISVOID':([28,],[47,]),':':([33,35,38,44,48,50,51,52,54,58,59,63,65,66,69,71,74,77,80,81,83,85,87,88,90,91,95,97,98,99,100,101,102,104,105,106,107,108,110,111,113,114,121,122,123,],[-22,-17,-24,-27,-25,82,-19,-21,-18,-58,-23,-26,-16,-20,-55,-54,-56,-58,-52,-53,-57,-51,-34,-36,-41,-50,-28,-49,-47,-45,-39,-37,-48,-14,-15,-33,-43,-35,-46,-44,-32,-38,-42,-40,-29,]),'$end':([1,3,4,5,7,15,],[0,-58,-1,-3,-2,-4,]),'_COMP':([28,],[49,]),'_FORMAL':([30,],[68,]),'_STRING':([28,],[53,]),'ID':([20,21,34,36,60,68,79,104,105,],[22,23,70,71,89,94,103,-14,-15,]),'_METHOD':([17,],[21,]),'TYPEID':([8,9,22,23,25,26,31,56,82,89,94,112,115,],[9,10,24,-58,-12,29,-11,85,104,109,112,-13,118,]),'_LOOP':([28,],[55,]),'_NEW':([28,],[56,]),'_PROGRAM':([2,],[3,]),'_PLUS':([28,],[57,]),'_BLOCK':([28,],[58,]),'_LET':([28,],[60,]),'LINENO':([0,3,4,5,7,12,13,14,15,16,18,19,23,24,25,26,27,29,31,37,39,41,42,43,45,46,47,49,55,57,58,61,62,64,67,70,72,73,75,76,78,84,86,87,88,92,93,96,104,105,108,109,112,116,117,118,119,120,124,],[2,-58,6,-3,-2,-58,17,-6,-4,-5,-7,-8,-58,28,-12,30,-10,28,-11,28,28,28,28,28,28,28,28,28,28,28,-58,28,28,28,-9,28,28,28,28,28,28,28,28,28,-36,28,28,28,-14,-15,-35,28,-13,-58,28,28,28,-31,-30,]),'_NEG':([28,],[61,]),'_SUB':([28,],[64,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'features':([12,],[13,]),'case_expr':([28,],[33,]),'expr_list':([58,],[87,]),'dispatch':([28,],[35,]),'un_op':([28,],[38,]),'let_list':([60,],[90,]),'feature':([13,],[16,]),'program':([0,],[1,]),'ref':([28,],[48,]),'method':([13,],[18,]),'empty':([3,12,23,58,77,116,],[5,14,25,88,100,120,]),'formals':([23,],[26,]),'inner_expr':([28,],[50,]),'while_expr':([28,],[51,]),'actuals':([116,],[119,]),'let':([28,],[52,]),'case_list':([77,],[101,]),'class':([4,],[7,]),'formal':([26,],[31,]),'case':([101,],[114,]),'if_expr':([28,],[54,]),'attr':([13,],[19,]),'expr':([24,29,37,39,41,42,43,45,46,47,49,55,57,61,62,64,70,72,73,75,76,78,84,86,87,92,93,96,109,117,118,119,],[27,67,72,73,75,76,77,78,79,80,81,84,86,91,92,93,95,96,97,98,99,102,106,107,108,110,111,113,117,121,122,124,]),'bin_op':([28,],[59,]),'classes':([3,],[4,]),'no_expr':([28,],[63,]),'assign':([28,],[65,]),'block':([28,],[66,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> LINENO _PROGRAM classes','program',3,'p_program','semant_ply.py',137),
  ('classes -> classes class','classes',2,'p_classes','semant_ply.py',143),
  ('classes -> empty','classes',1,'p_classes','semant_ply.py',144),
  ('class -> LINENO _CLASS TYPEID TYPEID FILENAME ( features )','class',8,'p_class','semant_ply.py',152),
  ('features -> features feature','features',2,'p_features','semant_ply.py',158),
  ('features -> empty','features',1,'p_features','semant_ply.py',159),
  ('feature -> method','feature',1,'p_feature','semant_ply.py',167),
  ('feature -> attr','feature',1,'p_feature','semant_ply.py',168),
  ('method -> LINENO _METHOD ID formals TYPEID expr','method',6,'p_method','semant_ply.py',172),
  ('attr -> LINENO _ATTR ID TYPEID expr','attr',5,'p_attr','semant_ply.py',177),
  ('formals -> formals formal','formals',2,'p_formals','semant_ply.py',182),
  ('formals -> empty','formals',1,'p_formals','semant_ply.py',183),
  ('formal -> LINENO _FORMAL ID TYPEID','formal',4,'p_formal','semant_ply.py',190),
  ('expr -> LINENO inner_expr : TYPEID','expr',4,'p_expr','semant_ply.py',194),
  ('expr -> LINENO inner_expr : _NO_TYPE','expr',4,'p_expr','semant_ply.py',195),
  ('inner_expr -> assign','inner_expr',1,'p_inner_expr','semant_ply.py',201),
  ('inner_expr -> dispatch','inner_expr',1,'p_inner_expr','semant_ply.py',202),
  ('inner_expr -> if_expr','inner_expr',1,'p_inner_expr','semant_ply.py',203),
  ('inner_expr -> while_expr','inner_expr',1,'p_inner_expr','semant_ply.py',204),
  ('inner_expr -> block','inner_expr',1,'p_inner_expr','semant_ply.py',205),
  ('inner_expr -> let','inner_expr',1,'p_inner_expr','semant_ply.py',206),
  ('inner_expr -> case_expr','inner_expr',1,'p_inner_expr','semant_ply.py',207),
  ('inner_expr -> bin_op','inner_expr',1,'p_inner_expr','semant_ply.py',208),
  ('inner_expr -> un_op','inner_expr',1,'p_inner_expr','semant_ply.py',209),
  ('inner_expr -> ref','inner_expr',1,'p_inner_expr','semant_ply.py',210),
  ('inner_expr -> no_expr','inner_expr',1,'p_inner_expr','semant_ply.py',211),
  ('no_expr -> _NO_EXPR','no_expr',1,'p_no_expr','semant_ply.py',215),
  ('assign -> _ASSIGN ID expr','assign',3,'p_assign','semant_ply.py',219),
  ('dispatch -> _DISPATCH expr ID ( actuals )','dispatch',6,'p_dispatch','semant_ply.py',223),
  ('actuals -> actuals expr','actuals',2,'p_actuals','semant_ply.py',227),
  ('actuals -> empty','actuals',1,'p_actuals','semant_ply.py',228),
  ('if_expr -> _COND expr expr expr','if_expr',4,'p_if_expr','semant_ply.py',235),
  ('while_expr -> _LOOP expr expr','while_expr',3,'p_while_expr','semant_ply.py',239),
  ('block -> _BLOCK expr_list','block',2,'p_block','semant_ply.py',243),
  ('expr_list -> expr_list expr','expr_list',2,'p_expr_list','semant_ply.py',247),
  ('expr_list -> empty','expr_list',1,'p_expr_list','semant_ply.py',248),
  ('case_expr -> _TYPCASE expr case_list','case_expr',3,'p_case_expr','semant_ply.py',255),
  ('case_list -> case_list case','case_list',2,'p_case_list','semant_ply.py',259),
  ('case_list -> empty','case_list',1,'p_case_list','semant_ply.py',260),
  ('case -> _BRANCH TYPEID expr','case',3,'p_case','semant_ply.py',267),
  ('let -> _LET let_list','let',2,'p_let','semant_ply.py',271),
  ('let_list -> ID TYPEID expr expr','let_list',4,'p_let_list','semant_ply.py',275),
  ('bin_op -> _PLUS expr expr','bin_op',3,'p_bin_op','semant_ply.py',279),
  ('bin_op -> _SUB expr expr','bin_op',3,'p_bin_op','semant_ply.py',280),
  ('bin_op -> _MUL expr expr','bin_op',3,'p_bin_op','semant_ply.py',281),
  ('bin_op -> _DIV expr expr','bin_op',3,'p_bin_op','semant_ply.py',282),
  ('bin_op -> _LT expr expr','bin_op',3,'p_bin_op','semant_ply.py',283),
  ('bin_op -> _LE expr expr','bin_op',3,'p_bin_op','semant_ply.py',284),
  ('bin_op -> _EQ expr expr','bin_op',3,'p_bin_op','semant_ply.py',285),
  ('un_op -> _NEG expr','un_op',2,'p_un_op','semant_ply.py',289),
  ('un_op -> _NEW TYPEID','un_op',2,'p_un_op','semant_ply.py',290),
  ('un_op -> _ISVOID expr','un_op',2,'p_un_op','semant_ply.py',291),
  ('un_op -> _COMP expr','un_op',2,'p_un_op','semant_ply.py',292),
  ('ref -> _OBJECT ID','ref',2,'p_ref','semant_ply.py',296),
  ('ref -> _INT DIGITS','ref',2,'p_ref','semant_ply.py',297),
  ('ref -> _BOOL DIGITS','ref',2,'p_ref','semant_ply.py',298),
  ('ref -> _STRING FILENAME','ref',2,'p_ref','semant_ply.py',299),
  ('empty -> <empty>','empty',0,'p_empty','semant_ply.py',304),
]
